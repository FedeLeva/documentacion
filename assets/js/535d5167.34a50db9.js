"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[5544],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>p});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=t.createContext({}),d=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=d(a),p=o,g=u["".concat(l,".").concat(p)]||u[p]||m[p]||i;return a?t.createElement(g,s(s({ref:n},c),{},{components:a})):t.createElement(g,s({ref:n},c))}));function p(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=a.length,s=new Array(i);s[0]=u;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var d=2;d<i;d++)s[d]=a[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1190:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=a(7462),o=(a(7294),a(3905));const i={sidebar_position:3},s="Interfaz Grafica",r={unversionedId:"Java/interfaz",id:"Java/interfaz",title:"Interfaz Grafica",description:"Cambiar pantalla(JPanel)",source:"@site/docs/Java/interfaz.md",sourceDirName:"Java",slug:"/Java/interfaz",permalink:"/documentacion/docs/Java/interfaz",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Java/interfaz.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"Java",previous:{title:"Base de datos",permalink:"/documentacion/docs/Java/BD"},next:{title:"Try Catch",permalink:"/documentacion/docs/Java/excepciones"}},l={},d=[{value:"Cambiar pantalla(JPanel)",id:"cambiar-pantallajpanel",level:2},{value:"JTable",id:"jtable",level:2},{value:"metodos de table",id:"metodos-de-table",level:3},{value:"Cambiar de ventana(JFrame)",id:"cambiar-de-ventanajframe",level:2},{value:"Seleccionar datos",id:"seleccionar-datos",level:2},{value:"Textfield",id:"textfield",level:3},{value:"TextField Password",id:"textfield-password",level:3},{value:"ComboBox",id:"combobox",level:3},{value:"RadioButton Y CheckBox",id:"radiobutton-y-checkbox",level:3},{value:"Dialogos",id:"dialogos",level:2},{value:"Opciones",id:"opciones",level:3},{value:"input",id:"input",level:3},{value:"JoptionPane (Muchas opciones)",id:"joptionpane-muchas-opciones",level:3},{value:"JTextArea TABL",id:"jtextarea-tabl",level:2},{value:"Layout",id:"layout",level:2},{value:"FlowLayout",id:"flowlayout",level:3},{value:"BorderLayout",id:"borderlayout",level:3},{value:"GridLayout",id:"gridlayout",level:3},{value:"GridBagLayout",id:"gridbaglayout",level:3},{value:"Otro ejemplo",id:"otro-ejemplo",level:3},{value:"CardLayout",id:"cardlayout",level:3},{value:"Metodos",id:"metodos",level:3},{value:"scrollPane",id:"scrollpane",level:2},{value:"Metodo 1",id:"metodo-1",level:3},{value:"Metodo 2",id:"metodo-2",level:3}],c={toc:d};function m(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"interfaz-grafica"},"Interfaz Grafica"),(0,o.kt)("h2",{id:"cambiar-pantallajpanel"},"Cambiar pantalla(JPanel)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ubicado en un JFrame")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    static void  nuevoPanel(JPanel  panelActual) {\n        contentPane.removeAll();\n        contentPane.add(panelActual);\n        contentPane.repaint();\n        contentPane.revalidate();\n    }\n")),(0,o.kt)("p",null,"En otra parte del codigo para cambiar la pantalla:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"CargarImpresora ventana = new CargarImpresora();\n                nuevoPanel(ventana);\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"ventana es la instancia de un JPanel")))),(0,o.kt)("h2",{id:"jtable"},"JTable"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"El Jtable solo muestra encabezado con un elemento superior(contenedor) como un scroll pane.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://medium.com/el-acordeon-del-programador/leyendo-datos-de-una-jtabla-en-java-swing-bc04263efd76"},"Leyendo datos de un JTable "))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=sJ-4O5uOhnc"},"Como hacer para que tu tabla no sea editable en Java por c\xf3digo y gr\xe1ficamente")),(0,o.kt)("h3",{parentName:"li",id:"definir-nombre-de-columnas"},"Definir nombre de columnas"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},'    \nprivate String columnas[] = {"Marca" , "Modelo" , "Rango" , "A color" , "Multifuncion"};\nDefaultTableModel modelo = new DefaultTableModel(columnas , 0) {\n    \n    public boolean isCellEditable(int row , int column) {\n        return false;\n    }\n   };\n')),(0,o.kt)("h3",{parentName:"li",id:"definir-filas-de-forma-dinamica"},"Definir filas de forma dinamica")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Se necesita un ArrayList","<","> de tipo Array de Objetos (cuyo tama\xf1o es igual a la cantidad de columnas de la tabla)"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"private ArrayList<Object[]> data = new ArrayList<>();\nprivate JTable table;\n\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    private void cargar() {\n        for (int i = 0 ; i < DispositivoTecnologicos.getListado().size() ; i++) {\n            if (DispositivoTecnologicos.getListado().get(i) instanceof Impresora) {\n            Object[] impresora = new Object[5];\n            impresora[0] = DispositivoTecnologicos.getListado().get(i).getMarca();\n            impresora[1] = DispositivoTecnologicos.getListado().get(i).getModelo();\n            impresora[2] = ((Impresora)DispositivoTecnologicos.getListado().get(i)).getTipo();\n            impresora[3] = ((Impresora)DispositivoTecnologicos.getListado().get(i)).isEs_color();\n            impresora[4] = ((Impresora)DispositivoTecnologicos.getListado().get(i)).isEs_multifuncion();\n            \n            data.add(impresora);\n            } else {\n                continue;\n            }\n        }\n        modelo.setNumRows(0);\n        for(Object[] dato : this.data) {\n            this.modelo.addRow(dato);\n            \n        }\n        table.setModel(modelo);\n        \n        \n        \n    }\n")),(0,o.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Por cada item , genero un array cuyo tama\xf1o es  la cantidad de columnas de la tabla y lo a\xf1ado al arraylist"),(0,o.kt)("li",{parentName:"ul"},"El indice del array representa el indice de la columna a llenar , la posicion 0 equivale a la columna 0 , la posicion 1 a la columna 1 y asi ..."),(0,o.kt)("li",{parentName:"ul"},"el metodo setNumRows(0) del modelo es para vaciar las filas "),(0,o.kt)("li",{parentName:"ul"},"el metodo setModel(Modelo) de la tabla es para a\xf1adir el modelo a la tabla")))),(0,o.kt)("h3",{parentName:"li",id:"otra-forma-de-actualizar-datos-de-una-tabla"},"Otra forma de actualizar datos de una tabla")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"El Modelo ya fue establecido en la tabla."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    private void ActualizarTabla() {\n    DefaultTableModel dtm = (DefaultTableModel) table.getModel();\n    int cantColumnas = dtm.getRowCount();\n    // Vaciar la tabla\n    for(int b = (cantColumnas - 1) ; b >=0 ; b--) { \n         dtm.removeRow(b);\n    }\n    // Llenar la tabla\n    // Se puede usar table.setValueAT()\n    int  cantAlumno = ControladoraAlumno.alumnos.size();\n    if (cantAlumno > 0) {\n        for (int i = 0 ; i < cantAlumno ; i++) {\n            String codigo = ControladoraAlumno.alumnos.get(i).getCodigo();\n            String Nombre = ControladoraAlumno.alumnos.get(i).getNombre();\n            String Semestre = Integer.toString(ControladoraAlumno.alumnos.get(i).getSemestre());\n            String carrera = ControladoraAlumno.alumnos.get(i).getCarrera();\n            String Nota = Double.toString(ControladoraAlumno.alumnos.get(i).getPromedio());\n            // Es un array el parametro ,  Object[] array = new Object[5]\n            dtm.addRow(new Object[] {codigo , Nombre , Semestre , carrera , Nota});\n        }\n    } \n    \n}\n")))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Las columnas de las tablas son codigo , Nombre , Semestre , carrera y Nota"),(0,o.kt)("li",{parentName:"ul"},"Podes asignar los valores con ",(0,o.kt)("a",{parentName:"li",href:"https://w3api.com/Java/JTable/setValueAt/"},"setValueAt")," (Indice de columna y fila empieza en 0);")))),(0,o.kt)("h3",{id:"metodos-de-table"},"metodos de table"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"getSelectedRow()  = Devuelve la fila selecionada"),(0,o.kt)("li",{parentName:"ul"},"getSelectedColumn() = Devuelve la columna selecionada")),(0,o.kt)("h2",{id:"cambiar-de-ventanajframe"},"Cambiar de ventana(JFrame)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    Mostrar GUIMostrar = new Mostrar();\n    GUIMostrar.setVisible(true);\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Se genera una instancia de un JFrame y se le asigna un setVisible(true)"),(0,o.kt)("li",{parentName:"ul"},"Si se desea cerrar la ventana actual , se puede utilizar el metodo dispose();")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"dispose();\n")),(0,o.kt)("p",null,"   O tambien "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"System.exit(0);\n")),(0,o.kt)("h2",{id:"seleccionar-datos"},"Seleccionar datos"),(0,o.kt)("h3",{id:"textfield"},"Textfield"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"TextField.getText();\n")),(0,o.kt)("p",null,"   Devuelve un String"),(0,o.kt)("h3",{id:"textfield-password"},"TextField Password"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"}," private char[] password;\npassword = textFieldContrase\xf1a.getPassword();\n")),(0,o.kt)("p",null,"  Devuelve un array de char"),(0,o.kt)("h3",{id:"combobox"},"ComboBox"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"  String marcaString =  ComboBox.getSelectedItem().toString().trim();\n")),(0,o.kt)("p",null,"Devuelve un String sin espacio en blanco"),(0,o.kt)("p",null,"Devuelve el indice selecionado (empieza en 0)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"comboSexo.getSelectedIndex()\n")),(0,o.kt)("h3",{id:"radiobutton-y-checkbox"},"RadioButton Y CheckBox"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"   Los radio button deben ir dentro de un grupo de botones para que solo se seleccione uno"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"   private ButtonGroup  botones = new ButtonGroup();\n     botones.add(radioButton);  \n        botones.add(radioButton);\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"if (radioButton.isSelected()) {\n                    \n                }\n")),(0,o.kt)("p",null,"   Devuelve true , si fue seleccionado"),(0,o.kt)("h2",{id:"dialogos"},"Dialogos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://mkyong.com/swing/java-swing-how-to-make-a-confirmation-dialog/"},"Opciones")),(0,o.kt)("h3",{parentName:"li",id:"mostrar-mensaje"},"Mostrar mensaje"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'JOptionPane.showMessageDialog(null, "mensaje" , "titulo" , JOptionPane.INFORMATION_MESSAGE);\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"El ultimo parametro es el icono")))),(0,o.kt)("p",null,"Solo mensaje:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},' JOptionPane.showMessageDialog(null, "Se ha registrado el alumno");\n')),(0,o.kt)("h3",{id:"opciones"},"Opciones"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'    int opcion = JOptionPane.showConfirmDialog(null, "\xbfEstas seguro de eliminar el producto?" , "Eliminar" , JOptionPane.YES_NO_OPTION);\n')),(0,o.kt)("p",null,"Si devuelve 0 le dio a Si , Si devuelve 1 le dio a NO"),(0,o.kt)("p",null,"Y si habilito la opcion cancel es 2"),(0,o.kt)("h3",{id:"input"},"input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String nuevoValor = JOptionPane.showInputDialog(null , "Ingrese el nuevo valor" );\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Puede tener dos parametros (null , texto)"),(0,o.kt)("li",{parentName:"ul"},"Puede tener los 4 parametros (null , texto , titulo , icono)"),(0,o.kt)("li",{parentName:"ul"},"Puede tener solo un parametro (el mensaje)")))),(0,o.kt)("h3",{id:"joptionpane-muchas-opciones"},"JoptionPane (Muchas opciones)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Puede tener  8 parametros (null , texto , titulo , tipo de opcion , tipo de mensaje , icono , arreglo de botones , valor seleccionado)"),(0,o.kt)("li",{parentName:"ul"},"Devuelve un numero entero (indice del array de botones)",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},'        String[] botones = {"Monitor","Teclado","Mouse"};\nint indice =    JOptionPane.showOptionDialog(null, "Elige una palabra", "Elige", 0, JOptionPane.QUESTION_MESSAGE, null , botones, "Teclado");\n    System.out.println(botones[indice]);\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=JLvmSkUWBrY"},"mas info"))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Todos los dialogos tienen los primeros 6 parametros (aunque puede variar segun el tipo de mensaje)."),(0,o.kt)("li",{parentName:"ul"},"el cuarto parametro puede variar entre tipo de opcion y tipo de mensaje(icono)."),(0,o.kt)("li",{parentName:"ul"},"Si el cuarto parametro es el tipo de mensaje , el dialogo solo tendria  4 parametros.")))),(0,o.kt)("h2",{id:"jtextarea-tabl"},"JTextArea TABL"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.tutorialspoint.com/how-to-display-jtextarea-in-the-form-of-a-table-with-gridlayout-in-java"},"Tabla JTEXTAREA"),"-"),(0,o.kt)("h2",{id:"layout"},"Layout"),(0,o.kt)("h3",{id:"flowlayout"},"FlowLayout"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Los Componentes a\xf1adidos a un Panel con FlowLayout se encadenan en forma de lista. La cadena es horizontal, de izquierda a\nderecha, y se puede seleccionar el espaciado entre cada\nComponente"),(0,o.kt)("li",{parentName:"ul"},"Hace que todos los componentes queden en fila  y quepan en la ventana"),(0,o.kt)("li",{parentName:"ul"},"Es utilizado en barras de herramientas "),(0,o.kt)("li",{parentName:"ul"},"Los componentes se van adaptando al tama\xf1o de la ventana.",(0,o.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"}," Se puede modificar la alineacion y el margen"))))),(0,o.kt)("h3",{id:"borderlayout"},"BorderLayout"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Utiliza cinco zonas para\ncolocar los Componentes sobre ellas: Norte, Sur, Este,\nOeste y Centro."),(0,o.kt)("li",{parentName:"ul"},"Es el layout o composici\xf3n que se utilizan por defecto Frame y Dialog."),(0,o.kt)("li",{parentName:"ul"},"El Norte ocupa la parte superior del panel, el Este ocupa\nel lado derecho, Sur la zona inferior y Oeste el lado\nizquierdo. Centro representa el resto que queda, una vez\nque se hayan rellenado las otras cuatro partes."),(0,o.kt)("li",{parentName:"ul"},"Divide la ventana en 5  (Norte , Sur , Este , Oeste , Centro)")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Podes modificar el margen"))),(0,o.kt)("h3",{id:"gridlayout"},"GridLayout"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"proporciona gran flexibilidad para situar\nComponentes. El layout se crea con un n\xfamero de filas y\ncolumnas y los Componentes van dentro de las celdas de\nla tabla as\xed definida."),(0,o.kt)("li",{parentName:"ul"},"Define una cuadricula(tabla) de componentes "),(0,o.kt)("li",{parentName:"ul"},"Los componentes se adaptan a la ventana"),(0,o.kt)("li",{parentName:"ul"},"Por defecto solo genera una fila"),(0,o.kt)("li",{parentName:"ul"},"Le da prioridad a las filas ",(0,o.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Le podes modificar las columnas y filas"))))),(0,o.kt)("h3",{id:"gridbaglayout"},"GridBagLayout"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Es igual que la composici\xf3n de\nGridLayout, con la diferencia que los Componentes no\nnecesitan tener el mismo tama\xf1o. Es quiz\xe1 el layout m\xe1s\nsofisticado y vers\xe1til."),(0,o.kt)("li",{parentName:"ul"},"Te permite definir  que lugar de la pantalla  va a ocupar y el tama\xf1o de cada  componente"),(0,o.kt)("li",{parentName:"ul"},"Se adapta a la ventana\nAl implementarlo se instancian dos objetos: ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    GridBagLayout gbl_contentPane = new GridBagLayout();\n    GridBagConstraints gbc_texto = new GridBagConstraints();\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"GridBagConstraints :Sirve para asignar Restricciones a los elementos, para que se comporten de cierta manera en la ventana y decirle que tienen que hacer."),(0,o.kt)("li",{parentName:"ul"},"Hay que especificarle a cada elemento una restriccion")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'\npublic class Ventana extends JFrame {\n\n    private JPanel contentPane;\n    private GridBagConstraints gbc_1;\n    \n    \n\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Ventana frame = new Ventana();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 715, 555);\n        contentPane = new JPanel();\n        contentPane.setAlignmentX(Component.LEFT_ALIGNMENT);\n        setContentPane(contentPane);\n        GridBagLayout gbl_contentPane = new GridBagLayout();\n        gbl_contentPane.columnWidths = new int[]{273, 0};\n        contentPane.setLayout(gbl_contentPane);\n        \n    \n        \n        JTextArea area = new JTextArea();\n        JScrollPane scroll = new JScrollPane(area);\n        JTextField texto = new JTextField();\n        JButton boton = new JButton("New button");\n        boton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                area.append(texto.getText() + "\\n");\n                texto.setText("");\n            }\n        });\n        \n        // Elemento scroll que contiene el texarea que ocupa las 2 columnas y una fila empezando por la fila y columna 0\n        GridBagConstraints gbc = new GridBagConstraints();\n        gbc.insets = new Insets(0, 0, 5, 5);\n        // En que columna empieza\n         gbc.gridx = 0;\n         // En que fila empieza\n         gbc.gridy = 0;\n            // ancho  - la cantidad de columnas que quiero que ocupe\n         gbc.gridwidth = 2;\n            // la cantidad de Filas que va a ocupar el componente , alto\n        gbc.gridheight = 1;\n        // Cuanto quiero que crezca\n        // Si la ventana crece, cuanto crece el componente horizontalmente\n        gbc.weightx = 1;\n        // Si la ventana crece, cuanto crece el componente verticalmente\n        gbc.weighty = 1;\n        // Como quiero que crezca\n        // El modo de como va a crecer el elemento (de forma vertical , horizontal , ambas , etc)\n        gbc.fill = GridBagConstraints.BOTH;\n        //A\xf1adir el componente con sus restricciones\n        getContentPane().add(scroll,gbc);\n       \n        \n        \n        // Para el texto que empieza en la columna 0 y fila 1\n        gbc_1 = new GridBagConstraints();\n        \n           gbc_1.gridx = 0;\n           gbc_1.gridy = 1;\n           gbc_1.weightx = 1;\n           gbc_1.weighty = 1;\n           // Para que mantenga el alto y solo crezca de forma horizontal\n           gbc_1.fill = GridBagConstraints.HORIZONTAL;\n           getContentPane().add(texto,gbc_1);\n           \n           \n           // Para el boton empieza en la columna 1 y fila 1\n           gbc_1 = new GridBagConstraints();\n               gbc_1.gridx = 1;\n               gbc_1.gridy = 1;\n               gbc_1.gridwidth = 1;\n               gbc_1.weightx = 0;\n               gbc_1.weighty = 0;\n               //  No crece\n               gbc_1.fill = GridBagConstraints.NONE;\n               getContentPane().add(boton,gbc_1);\n               \n               \n           \n           \n        \n')),(0,o.kt)("h3",{id:"otro-ejemplo"},"Otro ejemplo"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Se utiliza"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"GridBagConstraints constraints = new GridBagConstraints();\n")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debemos tratar de meter los componentes en las celdas. Cada componente debe ocupar una o m\xe1s celdas. "),(0,o.kt)("li",{parentName:"ul"},"Dos componentes no pueden ocupar la misma celda."),(0,o.kt)("li",{parentName:"ul"},"No es necesario que las celdas de la rejilla sean todas del mismo tama\xf1o ni es necesario que un componente ocupe una celda completa."),(0,o.kt)("li",{parentName:"ul"},"Para que no se lie el c\xf3digo, conviene que el componente ocupe toda la celda, o bien que est\xe9 centrado en la misma.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"http://www.chuidiang.org/java/layout/GridBagLayout/ventana2.jpg",alt:"Algo asi "})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package prueba;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.border.EmptyBorder;\nimport java.awt.GridBagLayout;\nimport java.awt.GridBagConstraints;\n\npublic class Ventana extends JFrame {\n    private JTextArea areaTexto;\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Ventana frame = new Ventana();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 450, 300);\n        JPanel contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        GridBagLayout gbl_contentPane = new GridBagLayout();\n        contentPane.setLayout(gbl_contentPane);\n        \n        \n        \n        /* Esta llamada a\xf1ade el \xe1rea de texto, dejando al GridBagLayout total libertad para decidir d\xf3nde y c\xf3mo ponerlo. \n        No es lo que queremos. Necesitamos el m\xe9todo add() que admite un segundo par\xe1metro. \n        Este segundo par\xe1metro le indica al layout d\xf3nde y c\xf3mo colocar el componente. El segundo par\xe1metro es un Object, \n        lo que quiere decir que podriamos meter cualquier cosa. Evidentemente esto no es asi, \n        debemos meter algo que el layout entienda. Cada layout entiende su propio segundo par\xe1metro. \n        El GridBagLayout admite como segundo par\xe1metro un GridBagConstraints. \n        JTextArea areaTexto = new JTextArea("Area texto");\n        contentPane.add(areaTexto);\n        */\n        \n        \n        \n        \n        /* \n         * \n         * GridBagConstraints en una clase en cuyos atributos se guarda informaci\xf3n de c\xf3mo y d\xf3nde a\xf1adir el \n         * componente. De momento vamos a contemplar s\xf3lo cuatro de estos atributos:\n\nGridBagConstraints.gridx nos dice la posici\xf3n x del componente, es decir, el n\xfamero de columna en la que est\xe1 el componente,\n siendo la columna 0 la primera columna de la izquierda. Si el componente ocupa varias columnas (como nuestra \xe1rea de texto),\n  debemos indicar la columna en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridy nos dice la posici\xf3n y del componente, es decir, el n\xfamero de fila en la que est\xe1 el componente, \nsiendo la fila 0 la primera fila de la parte de arriba. Si el componente ocupa varias filas (como nuestra \xe1rea de texto), debemos \nindicar la fila en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridwidth nos dice cu\xe1ntas celdas en horizontal debe ocupar el componente. El ancho del componente.\nGridBagConstraints.gridheight nos dice cuantas celdas en vertical debe ocupar el componente. El alto del componente.\n         */\n        areaTexto = new JTextArea("Area texto");\n        GridBagConstraints gbc_areaTexto = new GridBagConstraints();\n        gbc_areaTexto.gridx = 0; // El \xe1rea de texto empieza en la columna cero.\n        gbc_areaTexto.gridy = 0; // El \xe1rea de texto empieza en la fila cero\n        gbc_areaTexto.gridwidth = 2; // El \xe1rea de texto ocupa dos columnas.\n        gbc_areaTexto.gridheight = 2; // El \xe1rea de texto ocupa 2 filas.\n        contentPane.add (areaTexto, gbc_areaTexto);\n        \n        /* \n         * En realidad gridwith y gridheight admite tambi\xe9n determinadas constantes que hacen que el \n         * componente se estire hasta el final del contenedor, ocupando todas las columnas o filas libres \n         * o hasta que encuentre otro componente. No vamos a usar esas constantes (est\xe1n definidas en GridBagConstraints)\n         *  y simplemente hemos puesto el n\xfamero de filas y columnas (2 en ambos casos) que queremos que ocupe.\n         */\n      \n        \n        /* \n         * Los siguientes elementos tienen todos un gridwidth y gridheight de 1, \n         * puesto que ocupan una fila y columna. Las posiciones son las siguientes:\n         */\n        \n        JButton boton1 = new JButton ("Boton 1");\n        GridBagConstraints constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton1, constraints);\n        \n        \n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton2, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton3, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton4, constraints);\n        \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (campoTexto, constraints);\n        \n        \n        /*\n         * Bueno, no se parece mucho a lo que quer\xedamos. Se ha quedado todo en el centro de la ventana y el area de texto es bastante canija. \xbfQu\xe9 ha pasado?\n\nEstirar las filas y las columnas\n  \n         */\n    }\n\n    \n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"http://www.chuidiang.org/java/layout/GridBagLayout/ventana3.jpg",alt:"Algo asi "})),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"\xbfQue paso?")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Lo que ha pasado es que s\xf3lo le hemos dicho al GridBagLayout d\xf3nde colocar los componentes y eso lo ha hecho bien. Cada componente est\xe1 donde debe. Lo que pasa es que no le hemos dicho nada de c\xf3mo estirar las filas y columnas, as\xed que ha hecho lo que hace por defecto: Cada fila y columna es del tama\xf1o m\xednimo necesario para albergar sus componentes y est\xe1n centradas dentro de la ventana. En la siguiente figura vemos como est\xe1n nuestras filas y columnas:"),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{parentName:"p",src:"http://www.chuidiang.org/java/layout/GridBagLayout/ventana4.jpg",alt:"Asi"})))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package prueba;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.border.EmptyBorder;\nimport java.awt.GridBagLayout;\nimport java.awt.GridBagConstraints;\n\npublic class Ventana extends JFrame {\n    private JTextArea areaTexto;\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Ventana frame = new Ventana();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 450, 300);\n        JPanel contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        GridBagLayout gbl_contentPane = new GridBagLayout();\n        contentPane.setLayout(gbl_contentPane);\n        \n        \n        \n        /* Esta llamada a\xf1ade el \xe1rea de texto, dejando al GridBagLayout total libertad para decidir d\xf3nde y c\xf3mo ponerlo. \n        No es lo que queremos. Necesitamos el m\xe9todo add() que admite un segundo par\xe1metro. \n        Este segundo par\xe1metro le indica al layout d\xf3nde y c\xf3mo colocar el componente. El segundo par\xe1metro es un Object, \n        lo que quiere decir que podriamos meter cualquier cosa. Evidentemente esto no es asi, \n        debemos meter algo que el layout entienda. Cada layout entiende su propio segundo par\xe1metro. \n        El GridBagLayout admite como segundo par\xe1metro un GridBagConstraints. \n        JTextArea areaTexto = new JTextArea("Area texto");\n        contentPane.add(areaTexto);\n        */\n        \n        \n        \n        \n        /* \n         * \n         * GridBagConstraints en una clase en cuyos atributos se guarda informaci\xf3n de c\xf3mo y d\xf3nde a\xf1adir el \n         * componente. De momento vamos a contemplar s\xf3lo cuatro de estos atributos:\n\nGridBagConstraints.gridx nos dice la posici\xf3n x del componente, es decir, el n\xfamero de columna en la que est\xe1 el componente,\n siendo la columna 0 la primera columna de la izquierda. Si el componente ocupa varias columnas (como nuestra \xe1rea de texto),\n  debemos indicar la columna en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridy nos dice la posici\xf3n y del componente, es decir, el n\xfamero de fila en la que est\xe1 el componente, \nsiendo la fila 0 la primera fila de la parte de arriba. Si el componente ocupa varias filas (como nuestra \xe1rea de texto), debemos \nindicar la fila en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridwidth nos dice cu\xe1ntas celdas en horizontal debe ocupar el componente. El ancho del componente.\nGridBagConstraints.gridheight nos dice cuantas celdas en vertical debe ocupar el componente. El alto del componente.\n    areaTexto = new JTextArea("Area texto");\n        GridBagConstraints gbc_areaTexto = new GridBagConstraints();\n        gbc_areaTexto.gridx = 0; // El \xe1rea de texto empieza en la columna cero.\n        gbc_areaTexto.gridy = 0; // El \xe1rea de texto empieza en la fila cero\n        gbc_areaTexto.gridwidth = 2; // El \xe1rea de texto ocupa dos columnas.\n        gbc_areaTexto.gridheight = 2; // El \xe1rea de texto ocupa 2 filas.\n        contentPane.add (areaTexto, gbc_areaTexto);\n         */\n    \n        \n        /* \n         * En realidad gridwith y gridheight admite tambi\xe9n determinadas constantes que hacen que el \n         * componente se estire hasta el final del contenedor, ocupando todas las columnas o filas libres \n         * o hasta que encuentre otro componente. No vamos a usar esas constantes (est\xe1n definidas en GridBagConstraints)\n         *  y simplemente hemos puesto el n\xfamero de filas y columnas (2 en ambos casos) que queremos que ocupe.\n         */\n      \n        \n        /* \n         * Los siguientes elementos tienen todos un gridwidth y gridheight de 1, \n         * puesto que ocupan una fila y columna. Las posiciones son las siguientes:\n         * \n         *  JButton boton1 = new JButton ("Boton 1");\n        GridBagConstraints constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton1, constraints);\n        \n        \n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton2, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton3, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton4, constraints);\n        \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (campoTexto, constraints);\n        \n         */\n        \n    \n        \n        /*\n         * Bueno, no se parece mucho a lo que quer\xedamos. Se ha quedado todo en el centro de la ventana y el area de texto es bastante canija. \xbfQu\xe9 ha pasado?\n\nEstirar las filas y las columnas\n  \n         */\n        \n        /* \n         * \n         */\n        \n        \n        /** \n         * Las filas son de la altura justa para contener a los botones. Las columnas tambi\xe9n. \n         * El \xe1rea de texto que ocupa cuatro celdas se ha situado en el medio de ellas y le sobra un mont\xf3n de espacio.\n\nEl siguiente paso a dar consiste en decir c\xf3mo se deben estirar las filas columnas.\n Si comparamos con la figura en las que marcamos inicialmente las filas y columnas, vemos que las dos primeras filas(alto) deben ser m\xe1s anchas\n , la tercera fila ya est\xe1 bien de ancho. En cuanto a las columnas(ancho), la segunda es la que debe estirarse, la primera y tercera est\xe1n bien.\n\nPara estirar filas y columnas, dentro del GridBagConstraints tenemos los campos weigthx y weigthy. El primero indica c\xf3mo estirar las columnas\n(ancho).\nEl segundo las filas(alto). Aqui vamos a contar una forma sencilla de usar estos campos que nos servir\xe1 para la mayor\xeda de los casos. \nEn realidad podr\xedamos sacarle bastante m\xe1s jugo.\n\nA estos campos debemos darles el valor 0.0 (que es el valor por defecto) si no queremos que la fila o columna se estire.\n Este es el caso para la primera y tercera columna, as\xed como para la tercera fila. Debemos dar el valor 1.0 a las filas o columnas que \n queremos que se estiren hasta completar toda la ventana. Es el caso de las dos primeras filas y de la columna del medio.\n\nHay dos detalles con estos campos. El primero es que widthy afecta a una fila completa, no solo a un componente. \nPor ello, cada vez que a\xf1adamos un componente a esa fila, debemos dar a widthy el mismo valor (o 0.0 o 1.0). \nLo mismo pasa con widthx y las columnas. El segundo detalle es el que comentamos antes, s\xf3lo estamos usando una instancia de GridBagConstraints, \nasi que despu\xe9s de poner uno de estos campos a 1.0 y a\xf1adir un componente, debemos volver a ponerlo a 0.0 para el siguiente \n(suponiendo que sea eso lo que necesita).\n\nEl c\xf3digo ahora, a\xf1adiendo estos dos campos, quedar\xeda as\xed:\n         */\n        areaTexto = new JTextArea("Area texto");\n        GridBagConstraints constraints = new GridBagConstraints();\n        constraints.gridx = 0; // Columna 0. No necesita estirarse, no ponemos weightx\n        constraints.gridy = 0; // Fila 0. Necesita estirarse, hay que poner weighty\n        constraints.gridwidth = 2;\n        constraints.gridheight = 2;\n        constraints.weighty = 1.0; // La fila 0 debe estirarse, le ponemos un 1.0\n        this.getContentPane().add (areaTexto, constraints);\n        constraints.weighty = 0.0; // Restauramos al valor por defecto, para no afectar a los siguientes componentes.\n        \n        constraints = new GridBagConstraints();\n        JButton boton1 = new JButton ("Boton 1");\n        constraints.gridx = 2; // Columna 2. No necesita estirarse, no ponemos weightx\n        constraints.gridy = 0; // Fila 0. Necesita estirarse, hay que poner weighty\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0; /* La fila 0 debe estirarse, le ponemos un 1.0. Ya lo hicimos en el area de texto, pero aqu\xed debemos ser coherentes y poner lo mismo.*/\n        this.getContentPane().add (boton1, constraints);\n        constraints.weighty = 0.0; // Restauramos al valor por defecto, para no afectar a los siguientes componentes.\n\n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2; // Columna 2, no necesita estirarse, no ponemos weigthx\n        constraints.gridy = 1; // Fila 1, necesita estirarse, hay que poner weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0; // La fila 1 debe estirarse, le ponemos 1.0\n        this.getContentPane().add (boton2, constraints);\n        constraints.weighty = 0.0; // Restauramos el valor por defecto.\n\n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0; // Columna 0, no necesita estirarse, no ponemos weigthx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton3, constraints);\n       \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2; // Columna 2, no necesita estirarse, no ponemos weightx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton4, constraints);\n         \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1; // Columna 1, debe estirarse, le ponemos el weigthx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0; // La columna 1 debe estirarse, ponemos el 1.0 en weigthx\n        this.getContentPane().add (campoTexto, constraints);\n        /* Puesto que es el \xfaltimo componente, no restauramos el valor por defecto. Si m\xe1s adelante a\xf1adimos m\xe1s componentes, seguro que pagamos cara nuestra osad\xeda.*/\n    }\n\n    \n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"http://www.chuidiang.org/java/layout/GridBagLayout/ventana5.jpg",alt:"asi"})),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"\xbfque paso?")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\xbfQu\xe9 es lo que ha pasado ahora?. Como dice un viejo dicho de inform\xe1tica, el ordenador se empe\xf1a en hacer lo que le decimos y no lo que queremos. Le hemos dicho que estire las filas y columnas y es lo que ha hecho, pero como no le hemos dicho nada sobre los componentes, no los ha estirado en absoluto.\n",(0,o.kt)("img",{parentName:"p",src:"http://www.chuidiang.org/java/layout/GridBagLayout/ventana6.jpg",alt:"asi"})))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'/**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 450, 300);\n        JPanel contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        GridBagLayout gbl_contentPane = new GridBagLayout();\n        contentPane.setLayout(gbl_contentPane);\n        \n        \n        \n        /* Esta llamada a\xf1ade el \xe1rea de texto, dejando al GridBagLayout total libertad para decidir d\xf3nde y c\xf3mo ponerlo. \n        No es lo que queremos. Necesitamos el m\xe9todo add() que admite un segundo par\xe1metro. \n        Este segundo par\xe1metro le indica al layout d\xf3nde y c\xf3mo colocar el componente. El segundo par\xe1metro es un Object, \n        lo que quiere decir que podriamos meter cualquier cosa. Evidentemente esto no es asi, \n        debemos meter algo que el layout entienda. Cada layout entiende su propio segundo par\xe1metro. \n        El GridBagLayout admite como segundo par\xe1metro un GridBagConstraints. \n        JTextArea areaTexto = new JTextArea("Area texto");\n        contentPane.add(areaTexto);\n        */\n        \n        \n        \n        \n        /* \n         * \n         * GridBagConstraints en una clase en cuyos atributos se guarda informaci\xf3n de c\xf3mo y d\xf3nde a\xf1adir el \n         * componente. De momento vamos a contemplar s\xf3lo cuatro de estos atributos:\n\nGridBagConstraints.gridx nos dice la posici\xf3n x del componente, es decir, el n\xfamero de columna en la que est\xe1 el componente,\n siendo la columna 0 la primera columna de la izquierda. Si el componente ocupa varias columnas (como nuestra \xe1rea de texto),\n  debemos indicar la columna en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridy nos dice la posici\xf3n y del componente, es decir, el n\xfamero de fila en la que est\xe1 el componente, \nsiendo la fila 0 la primera fila de la parte de arriba. Si el componente ocupa varias filas (como nuestra \xe1rea de texto), debemos \nindicar la fila en la que est\xe1 la esquina superior izquierda del componente.\nGridBagConstraints.gridwidth nos dice cu\xe1ntas celdas en horizontal debe ocupar el componente. El ancho del componente.\nGridBagConstraints.gridheight nos dice cuantas celdas en vertical debe ocupar el componente. El alto del componente.\n    areaTexto = new JTextArea("Area texto");\n        GridBagConstraints gbc_areaTexto = new GridBagConstraints();\n        gbc_areaTexto.gridx = 0; // El \xe1rea de texto empieza en la columna cero.\n        gbc_areaTexto.gridy = 0; // El \xe1rea de texto empieza en la fila cero\n        gbc_areaTexto.gridwidth = 2; // El \xe1rea de texto ocupa dos columnas.\n        gbc_areaTexto.gridheight = 2; // El \xe1rea de texto ocupa 2 filas.\n        contentPane.add (areaTexto, gbc_areaTexto);\n         */\n    \n        \n        /* \n         * En realidad gridwith y gridheight admite tambi\xe9n determinadas constantes que hacen que el \n         * componente se estire hasta el final del contenedor, ocupando todas las columnas o filas libres \n         * o hasta que encuentre otro componente. No vamos a usar esas constantes (est\xe1n definidas en GridBagConstraints)\n         *  y simplemente hemos puesto el n\xfamero de filas y columnas (2 en ambos casos) que queremos que ocupe.\n         */\n      \n        \n        /* \n         * Los siguientes elementos tienen todos un gridwidth y gridheight de 1, \n         * puesto que ocupan una fila y columna. Las posiciones son las siguientes:\n         * \n         *  JButton boton1 = new JButton ("Boton 1");\n        GridBagConstraints constraints = new GridBagConstraints();\n        constraints.gridx = 2;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton1, constraints);\n        \n        \n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton2, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton3, constraints);\n        \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        contentPane.add (boton4, constraints);\n        \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (campoTexto, constraints);\n        \n         */\n        \n    \n        \n        /*\n         * Bueno, no se parece mucho a lo que quer\xedamos. Se ha quedado todo en el centro de la ventana y el area de texto es bastante canija. \xbfQu\xe9 ha pasado?\n\nEstirar las filas y las columnas\n  \n         */\n        \n        /* \n         * \n         */\n        \n        \n        /** \n         * Las filas son de la altura justa para contener a los botones. Las columnas tambi\xe9n. \n         * El \xe1rea de texto que ocupa cuatro celdas se ha situado en el medio de ellas y le sobra un mont\xf3n de espacio.\n\nEl siguiente paso a dar consiste en decir c\xf3mo se deben estirar las filas columnas.\n Si comparamos con la figura en las que marcamos inicialmente las filas y columnas, vemos que las dos primeras filas(alto) deben ser m\xe1s anchas\n , la tercera fila ya est\xe1 bien de ancho. En cuanto a las columnas(ancho), la segunda es la que debe estirarse, la primera y tercera est\xe1n bien.\n\nPara estirar filas y columnas, dentro del GridBagConstraints tenemos los campos weigthx y weigthy. El primero indica c\xf3mo estirar las columnas\n(ancho).\nEl segundo las filas(alto). Aqui vamos a contar una forma sencilla de usar estos campos que nos servir\xe1 para la mayor\xeda de los casos. \nEn realidad podr\xedamos sacarle bastante m\xe1s jugo.\n\nA estos campos debemos darles el valor 0.0 (que es el valor por defecto) si no queremos que la fila o columna se estire.\n Este es el caso para la primera y tercera columna, as\xed como para la tercera fila. Debemos dar el valor 1.0 a las filas o columnas que \n queremos que se estiren hasta completar toda la ventana. Es el caso de las dos primeras filas y de la columna del medio.\n\nHay dos detalles con estos campos. El primero es que widthy afecta a una fila completa, no solo a un componente. \nPor ello, cada vez que a\xf1adamos un componente a esa fila, debemos dar a widthy el mismo valor (o 0.0 o 1.0). \nLo mismo pasa con widthx y las columnas. El segundo detalle es el que comentamos antes, s\xf3lo estamos usando una instancia de GridBagConstraints, \nasi que despu\xe9s de poner uno de estos campos a 1.0 y a\xf1adir un componente, debemos volver a ponerlo a 0.0 para el siguiente \n(suponiendo que sea eso lo que necesita).\n\nEl c\xf3digo ahora, a\xf1adiendo estos dos campos, quedar\xeda as\xed:\n            areaTexto = new JTextArea("Area texto");\n        GridBagConstraints constraints = new GridBagConstraints();\n        constraints.gridx = 0; // Columna 0. No necesita estirarse, no ponemos weightx\n        constraints.gridy = 0; // Fila 0. Necesita estirarse, hay que poner weighty\n        constraints.gridwidth = 2;\n        constraints.gridheight = 2;\n        constraints.weighty = 1.0; // La fila 0 debe estirarse, le ponemos un 1.0\n        this.getContentPane().add (areaTexto, constraints);\n        constraints.weighty = 0.0; // Restauramos al valor por defecto, para no afectar a los siguientes componentes.\n        \n        constraints = new GridBagConstraints();\n        JButton boton1 = new JButton ("Boton 1");\n        constraints.gridx = 2; // Columna 2. No necesita estirarse, no ponemos weightx\n        constraints.gridy = 0; // Fila 0. Necesita estirarse, hay que poner weighty\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0;  La fila 0 debe estirarse, le ponemos un 1.0. Ya lo hicimos en el area de texto, pero aqu\xed debemos ser coherentes y poner lo mismo.\n        this.getContentPane().add (boton1, constraints);\n        constraints.weighty = 0.0; // Restauramos al valor por defecto, para no afectar a los siguientes componentes.\n\n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2; // Columna 2, no necesita estirarse, no ponemos weigthx\n        constraints.gridy = 1; // Fila 1, necesita estirarse, hay que poner weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0; // La fila 1 debe estirarse, le ponemos 1.0\n        this.getContentPane().add (boton2, constraints);\n        constraints.weighty = 0.0; // Restauramos el valor por defecto.\n\n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0; // Columna 0, no necesita estirarse, no ponemos weigthx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton3, constraints);\n       \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2; // Columna 2, no necesita estirarse, no ponemos weightx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton4, constraints);\n         \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1; // Columna 1, debe estirarse, le ponemos el weigthx\n        constraints.gridy = 2; // Fila 2, no necesita estirarse, no ponemos weigthy\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0; // La columna 1 debe estirarse, ponemos el 1.0 en weigthx\n        this.getContentPane().add (campoTexto, constraints);\n         */\n    \n        /* Puesto que es el \xfaltimo componente, no restauramos el valor por defecto. Si m\xe1s adelante a\xf1adimos m\xe1s componentes, seguro que pagamos cara nuestra osad\xeda.*/\n    \n    \n     /* \n      * pero los componentes siguen con su tama\xf1o original y en el centro de las celdas que tienen asignadas. \n      * El area de texto sigue igual, en el centro de sus cuatro celdas, los botones 1 y 2 se han centrado en sus celdas y \n      * lo mismo le pasa al campo de texto.\n\nLo siguiente que tenemos que hacer es decir qu\xe9 componentes deben estirarse (el area de texto y el campo de texto para nuestro ejemplo). \nPara aquellos componentes que no deben estirarse, podemos indicar en qu\xe9 parte de la celda queremos que se situen (caso del boton 1 y boton 2).\n\nPara hacer que un componente se estire, tenemos el atributo fill del GridBagConstraints. Este puede tomar los siguientes valores:\n\nGridBagConstraints.NONE para que no se estire en ning\xfan sentido, es la opci\xf3n por defecto.\nGridBagConstraints.VERTICAL para que se estire s\xf3lo en vertical\nGridBagConstraints.HORIZONTAL para que se estire s\xf3lo en horizontal.\nGridBagConstraints.BOTH para que se estire en ambas dimensiones\n\n\nSi el componente no se estira en alguna direcci\xf3n, podemos decirle por medio de anchor en GridBagConstraints qu\xe9 posici\xf3n queremos que ocupe. Las posibilidades son\n\nGridBagConstraints.CENTER para que el componente ocupe el centro de la celda. Es la opci\xf3n por defecto\nGridBagConstraints.NORTH para que se pegue a la parte superior, centrado en la misma.\nGridBagConstraints.NORTHEAST para que se pegue a la esquina superior derecha.\n... (qu\xe9 pereza me da escribir todos los puntos cardinales ...)\nGridBagConstraints.WEST para que se pegue al lado izquierdo, centrado en ese lado.\nGridBagConstraints.NORTHWEST para que se pegue a la esquina superior izquierda.\nIgual que antes, estamos usando una \xfanica instancia de GridBagConstraints, por lo que si al a\xf1adir un componente cambiamos una opci\xf3n, debemos tenerlo en cuenta para el siguiente.\n\nBueno, pues b\xe1sicamente nos queda decirle al area de texto de se ensanche en todos los sentidos, al campo de texto que se ensanche en horizontal y a los botones 1 y 2 que ocupen la posicion NORTH de su celda. El c\xf3digo ser\xeda el siguiente:\n      */\n        GridBagConstraints  constraints = new GridBagConstraints();\n        JTextArea cajaTexto = new JTextArea("Area texto");\n        constraints.gridx = 0;\n        constraints.gridy = 0;\n        constraints.gridwidth = 2;\n        constraints.gridheight = 2;\n        // El area de texto debe estirarse en ambos sentidos. Ponemos el campo fill.\n        constraints.fill = GridBagConstraints.BOTH;\n        constraints.weighty = 1.0;\n        this.getContentPane().add (cajaTexto, constraints);\n        constraints.weighty = 0.0;\n       \n        constraints = new GridBagConstraints();\n        JButton boton1 = new JButton ("Boton 1");\n        constraints.gridx = 2;\n        constraints.gridy = 0;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0;\n        // El bot\xf3n 1 debe ocupar la posici\xf3n NORTH de su celda\n        constraints.anchor = GridBagConstraints.NORTH;\n        // El bot\xf3n 1 no debe estirarse. Hab\xedamos cambiado este valor en el\n        // area de texto, asi que lo restauramos.\n        constraints.fill = GridBagConstraints.NONE;\n        this.getContentPane().add (boton1, constraints);\n        // Restauramos valores por defecto\n        constraints.anchor = GridBagConstraints.CENTER;\n        constraints.weighty = 0.0;\n\n        constraints = new GridBagConstraints();\n        JButton boton2 = new JButton ("Boton 2");\n        constraints.gridx = 2;\n        constraints.gridy = 1;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weighty = 1.0;\n        // El boton 2 debe ocupar la posici\xf3n NORTH de su celda.\n        constraints.anchor = GridBagConstraints.NORTH;\n        this.getContentPane().add (boton2, constraints);\n        // Restauramos valores por defecto.\n        constraints.weighty = 0.0;\n        constraints.anchor = GridBagConstraints.CENTER;\n      \n        \n        constraints = new GridBagConstraints();\n        JButton boton3 = new JButton ("Boton 3");\n        constraints.gridx = 0;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton3, constraints);\n        \n        \n        constraints = new GridBagConstraints();\n        JButton boton4 = new JButton ("Boton 4");\n        constraints.gridx = 2;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        this.getContentPane().add (boton4, constraints);\n       \n        \n        constraints = new GridBagConstraints();\n        JTextField campoTexto = new JTextField ("Campo texto");\n        constraints.gridx = 1;\n        constraints.gridy = 2;\n        constraints.gridwidth = 1;\n        constraints.gridheight = 1;\n        constraints.weightx = 1.0;\n        // El campo de texto debe estirarse s\xf3lo en horizontal.\n        constraints.fill = GridBagConstraints.HORIZONTAL;\n        this.getContentPane().add (campoTexto, constraints);\n    }\n\n    \n}\n\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Los camos weightx y weighty, como hemos visto, hace que se estiren las filas y columnas. Hemos puesto 0.0 para las que no se estiran y 1.0 para las que s\xed. En realidad cada fila o columna se estira en proporci\xf3n al valor de este campo respecto a los dem\xe1s. Por ejemplo, si a la columna 1 le ponemos weightx=1.0 y a la 2 le ponemos weightx=0.5, ambas se estirar\xedan , pero la primera el doble que la segunda.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Hay campos insets, ipadx e ipady que permiten fijar m\xe1rgenes entre los componentes, de forma que no queden pegados entre s\xed."))))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.chuidiang.org/java/layout/GridBagLayout/GridBagLayout.php"},"Link"))),(0,o.kt)("h3",{id:"cardlayout"},"CardLayout"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Este es el tipo de composici\xf3n que se\nutiliza cuando se necesita una zona de la ventana que\npermita colocar distintos componentes en esa misma\nzona."),(0,o.kt)("li",{parentName:"ul"},"Permite ubicar componentes dentro de un mismo contenedor, y poder visualizar solamente uno a la vez."),(0,o.kt)("li",{parentName:"ul"},"Es comun,  como una carta "),(0,o.kt)("li",{parentName:"ul"},"Son varias JPanel en un contenedor(que puede ser un JPanel , etc) y solo se muestra uno ")),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("p",null," A\xf1adir al contenedor los componentes :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'panelContenedor.add(panel1, "name_13829404634200");\npanelContenedor.add(panel2, "name_13829414548800");\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Siempre se levanta el primer panel agregado primero (en el ejemplo anterior panel1)"),(0,o.kt)("li",{parentName:"ul"},"el segundo parametro es la referencia al componente(puede ser cualquier valor String)")))),(0,o.kt)("h3",{id:"metodos"},"Metodos"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"}," Los metodos se hacen con el objeto CardLayout que puede ser obtenido del contenedor a traves del metodo GetLayout()"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"show(contenedor , componente): Para cambiar el componente que se muestra en el contenedor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'    JPanel panel2 = new JPanel();\n        panelContenedor.add(panel2, "panel2");\n        CardLayout c1 = (CardLayout) panelContenedor.getLayout();\n                // Dos parametros\n                 // Contenedor , la referencia al componete que queremos que se muestre en el contenedor \n                c1.show(panelContenedor, "panel2");\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"next(contenedor) : Se muestra el  siguiente componente . Si es el ultimo , este metodo cambia  al primero .")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"CardLayout c1 = (CardLayout) panelContenedor.getLayout();\n                // Un parametro\n                //  El contenedor\n               c1.next(panelContenedor);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"previous(contenedor) : Se muestra el componente anterior\nSi es el primero , este metodo cambia al ultimo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"CardLayout c1 = (CardLayout) panelContenedor.getLayout();\n                // Un parametro\n                //  El contenedor\n               c1.previous(panelContenedor);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"first(contenedor) : Se muestra el primer componente del contenedor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"    CardLayout c1 = (CardLayout) panelContenedor.getLayout();\n                // Un parametro\n                //  El contenedor\n               c1.first(panelContenedor);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"last(contenedor): Se muestra el ultimo componente del contenedor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"CardLayout c1 = (CardLayout) panelContenedor.getLayout();\n                // Un parametro\n                //  El contenedor\n               c1.last(panelContenedor);\n")),(0,o.kt)("h2",{id:"scrollpane"},"scrollPane"),(0,o.kt)("h3",{id:"metodo-1"},"Metodo 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package prueba;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.border.EmptyBorder;\nimport java.awt.GridBagLayout;\nimport java.awt.GridBagConstraints;\nimport java.awt.FlowLayout;\nimport javax.swing.JScrollPane;\nimport javax.swing.JLabel;\n\npublic class Ventana extends JFrame {\n    private JTextArea areaTexto;\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Ventana frame = new Ventana();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 450, 300);\n        JPanel contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        contentPane.setLayout(null);\n        \n        \n        \n        JLabel label = new JLabel("<html>ehicula in. Nunc quis interdum sem. Aenean sit amet tristique nibh. Nulla facilisi. Duis justo nunc, scelerisque vel ante non, euismod semper nulla. Morbi dictum posuere elit, <br>accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra.<br> accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra. <br> accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra. <br> Otro <br> otro <br> otro <br> otro</html>");\n        label.setBounds(12, 123, 390, 117);\n        // Se quita el add del contenido que va a contener el scroll\n        //contentPane.add(label);\n        \n        JScrollPane scrollPane = new JScrollPane();\n        scrollPane.setBounds(45, 59, 361, 112);\n        scrollPane.setViewportView(label);\n        // A\xf1adir el contenedor que tiene el scroll que a su vez contiene el label\n        contentPane.add(scrollPane);\n        \n        \n    }\n}\n\n')),(0,o.kt)("h3",{id:"metodo-2"},"Metodo 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package prueba;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.border.EmptyBorder;\nimport java.awt.GridBagLayout;\nimport java.awt.GridBagConstraints;\nimport java.awt.FlowLayout;\nimport javax.swing.JScrollPane;\nimport javax.swing.JLabel;\n\npublic class Ventana extends JFrame {\n    private JTextArea areaTexto;\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Ventana frame = new Ventana();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Ventana() {\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 450, 300);\n        JPanel contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        contentPane.setLayout(null);\n        \n        \n        \n        JLabel label = new JLabel("<html>ehicula in. Nunc quis interdum sem. Aenean sit amet tristique nibh. Nulla facilisi. Duis justo nunc, scelerisque vel ante non, euismod semper nulla. Morbi dictum posuere elit, <br>accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra.<br> accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra. <br> accumsan fringilla nunc tincidunt in. Nullam dictum tellus ac lectus accumsan viverra. <br> Otro <br> otro <br> otro <br> otro</html>");\n        label.setBounds(12, 123, 390, 117);\n        // Se quita el add del contenido que va a contener el scroll\n        //contentPane.add(label);\n        \n        JScrollPane scrollPane = new JScrollPane(label);\n        scrollPane.setBounds(45, 59, 361, 112);\n    \n        // A\xf1adir el contenedor que tiene el scroll que a su vez contiene el label\n        contentPane.add(scrollPane);\n        \n        \n    }\n}\n')))}m.isMDXComponent=!0}}]);